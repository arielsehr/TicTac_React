{"version":3,"sources":["index.js"],"names":["Square","className","onClick","props","this","value","React","Component","Board","i","squares","renderSquare","Game","state","history","Array","fill","stepNumber","xIsNext","slice","length","calculateWinner","setState","concat","step","status","current","winner","moves","map","move","desc","jumpTo","handleClick","lines","a","b","c","ReactDOM","render","document","getElementById"],"mappings":"gPAKMA,E,4JACF,WAAU,IAAD,OACP,OACE,wBACAC,UAAU,SACVC,QAAU,kBAAM,EAAKC,MAAMD,WAF3B,SAGGE,KAAKD,MAAME,Y,GANDC,IAAMC,WAYnBC,E,kKACJ,SAAaC,GAAI,IAAD,OACd,OACE,cAACT,EAAD,CACEK,MAAOD,KAAKD,MAAMO,QAAQD,GAC1BP,QAAS,kBAAM,EAAKC,MAAMD,QAAQO,Q,oBAKxC,WACE,OACE,gCACE,sBAAKR,UAAU,YAAf,UACGG,KAAKO,aAAa,GAClBP,KAAKO,aAAa,GAClBP,KAAKO,aAAa,MAErB,sBAAKV,UAAU,YAAf,UACGG,KAAKO,aAAa,GAClBP,KAAKO,aAAa,GAClBP,KAAKO,aAAa,MAErB,sBAAKV,UAAU,YAAf,UACGG,KAAKO,aAAa,GAClBP,KAAKO,aAAa,GAClBP,KAAKO,aAAa,a,GA1BTL,IAAMC,WAiCpBK,E,kDACJ,WAAYT,GAAQ,IAAD,8BACjB,cAAMA,IACDU,MAAQ,CACXC,QAAS,CAAC,CACRJ,QAASK,MAAM,GAAGC,KAAK,QAEzBC,WAAY,EACZC,SAAS,GAPM,E,+CAWnB,SAAYT,GACV,IAAMK,EAAUV,KAAKS,MAAMC,QAAQK,MAAM,EAAGf,KAAKS,MAAMI,WAAa,GAE9DP,EADUI,EAAQA,EAAQM,OAAO,GACfV,QAAQS,QAC7BE,EAAgBX,IAAYA,EAAQD,KAGvCC,EAAQD,GAAKL,KAAKS,MAAMK,QAAU,IAAM,IACxCd,KAAKkB,SAAS,CACZR,QAASA,EAAQS,OAAQ,CAAC,CACxBb,QAASA,KAEXO,WAAYH,EAAQM,OACpBF,SAAUd,KAAKS,MAAMK,a,oBAIzB,SAAOM,GACLpB,KAAKkB,SAAS,CACZL,WAAYO,EACZN,QAAUM,EAAO,IAAO,M,oBAI5B,WAAU,IAgBJC,EAhBG,OACDX,EAAUV,KAAKS,MAAMC,QACrBY,EAAUZ,EAAQV,KAAKS,MAAMI,YAC7BU,EAASN,EAAgBK,EAAQhB,SAEjCkB,EAAQd,EAAQe,KAAI,SAACL,EAAMM,GAC/B,IAAMC,EAAOD,EACb,eAAiBA,EACjB,mBACA,OACE,6BACE,wBAAQ5B,QAAS,kBAAM,EAAK8B,OAAOF,IAAnC,SAA2CC,KADpCD,MAab,OALEL,EADCE,EACQ,UAAYA,EAEZ,iBAAmBvB,KAAKS,MAAMK,QAAU,IAAM,KAIvD,sBAAKjB,UAAU,OAAf,UACE,qBAAKA,UAAU,aAAf,SACE,cAACO,EAAD,CACAE,QAAWgB,EAAQhB,QACnBR,QAAS,SAAAO,GAAC,OAAI,EAAKwB,YAAYxB,QAGjC,sBAAKR,UAAU,YAAf,UACE,8BAAMwB,IACN,6BAAKG,c,GArEItB,IAAMC,WAmFzB,SAASc,EAAgBX,GAWvB,IAVA,IAAMwB,EAAQ,CACZ,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAEAzB,EAAI,EAAGA,EAAIyB,EAAMd,OAAQX,IAAK,CACrC,kBAAkByB,EAAMzB,GAAxB,GAAO0B,EAAP,KAAUC,EAAV,KAAaC,EAAb,KACA,GAAI3B,EAAQyB,IAAMzB,EAAQyB,KAAOzB,EAAQ0B,IAAM1B,EAAQyB,KAAOzB,EAAQ2B,GACpE,OAAO3B,EAAQyB,GAGnB,OAAO,KAtBTG,IAASC,OACP,cAAC3B,EAAD,IACA4B,SAASC,eAAe,W","file":"static/js/main.af373bd9.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\n\nclass Square extends React.Component {\n    render() {\n      return (\n        <button \n        className=\"square\" \n        onClick={ () => this.props.onClick() }>\n          {this.props.value}\n        </button>\n      );\n    }\n  }\n  \n  class Board extends React.Component {\n    renderSquare(i) {\n      return (\n        <Square\n          value={this.props.squares[i]}\n          onClick={() => this.props.onClick(i)}\n        />\n      );\n    }\n  \n    render() {\n      return (\n        <div>\n          <div className=\"board-row\">\n            {this.renderSquare(0)}\n            {this.renderSquare(1)}\n            {this.renderSquare(2)}\n          </div>\n          <div className=\"board-row\">\n            {this.renderSquare(3)}\n            {this.renderSquare(4)}\n            {this.renderSquare(5)}\n          </div>\n          <div className=\"board-row\">\n            {this.renderSquare(6)}\n            {this.renderSquare(7)}\n            {this.renderSquare(8)}\n          </div>\n        </div>\n      );\n    }\n  }\n  \n  class Game extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        history: [{\n          squares: Array(9).fill(null),\n        }],\n        stepNumber: 0,\n        xIsNext: true,\n      };\n    }\n\n    handleClick(i) {\n      const history = this.state.history.slice(0, this.state.stepNumber + 1);\n      const current = history[history.length-1];\n      const squares = current.squares.slice();\n      if(calculateWinner(squares) || squares[i]) {\n        return;\n      }\n      squares[i] = this.state.xIsNext ? 'X' : 'O';\n      this.setState({\n        history: history.concat ([{\n          squares: squares\n        }]),\n        stepNumber: history.length,\n        xIsNext: !this.state.xIsNext,\n      });\n    }\n\n    jumpTo(step) {\n      this.setState({\n        stepNumber: step,\n        xIsNext: (step % 2) === 0\n      });\n    }\n\n    render() {\n      const history = this.state.history;\n      const current = history[this.state.stepNumber];\n      const winner = calculateWinner(current.squares);\n\n      const moves = history.map((step, move) => {\n        const desc = move ?\n        'Go to move #' + move :\n        'Go to game start';\n        return (\n          <li key={move}>\n            <button onClick={() => this.jumpTo(move)}>{desc}</button>\n          </li>\n        );\n      });\n\n      let status;\n      if(winner) {\n        status = 'Winner:' + winner;\n      } else {\n        status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\n      }\n\n      return (\n        <div className=\"game\">\n          <div className=\"game-board\">\n            <Board \n            squares = {current.squares}\n            onClick={i => this.handleClick(i)}\n            />\n          </div>\n          <div className=\"game-info\">\n            <div>{status}</div>\n            <ol>{moves}</ol>\n          </div>\n        </div>\n      );\n    }\n  }\n  \n  // ========================================\n  \n  ReactDOM.render(\n    <Game />,\n    document.getElementById('root')\n  );\n  \n  function calculateWinner(squares) {\n    const lines = [\n      [0, 1, 2],\n      [3, 4, 5],\n      [6, 7, 8],\n      [0, 3, 6],\n      [1, 4, 7],\n      [2, 5, 8],\n      [0, 4, 8],\n      [2, 4, 6],\n    ];\n    for (let i = 0; i < lines.length; i++) {\n      const [a, b, c] = lines[i];\n      if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n        return squares[a];\n      }\n    }\n    return null;\n  }"],"sourceRoot":""}